import os
from PyQt5.QtWidgets import QDialog, QVBoxLayout, QLabel, QTextBrowser
from PyQt5.QtGui import QPixmap


class HelpDialog(QDialog):
    def __init__(self):
        super().__init__()

        self.setWindowTitle('Справка')
        self.setGeometry(100, 100, 800, 600)

        layout = QVBoxLayout(self)

        # Создаем текстовый виджет для отображения справки
        text_browser = QTextBrowser(self)
        layout.addWidget(text_browser)

        # Загружаем текст справки
        help_text = """
        <h1>Справка пользователя: Работа с Интерфейсом Программы</h1>

<p>Данная программа предоставляет вам мощный инструмент для формирования и настройки задач, используя различные генераторы и опции конфигурации. Вся работа осуществляется через четыре вкладки: "Основная рабочая область", "Настройка генерации", "Настройка решений" и "Настройка констант и ответа". В данной справке мы предоставим вам краткое руководство по использованию каждой вкладки с примерами.</p>

<h2>1. Основная рабочая область</h2>

<p>В данной вкладке вы формируете задачу, сочетая константные поля и генераторы в нужной последовательности. Давайте рассмотрим это на примере. Предположим, мы хотим сгенерировать следующую задачу: "На факультете изучается n предметов. На понедельник необходимо в расписание внести k предметов. Сколькими способами это можно сделать?". Решением данной задачи является размещение n предметов k раз. Давайте создадим макет этой задачи.</p>

<p>Первым этапом будет создание текстовых полей и полей с генераторами в порядке, который позволит нам построить макет нашей задачи.</p> #todo1

<p><img src='img/Screen1.png'></p>

<p>Мы можем проверить наш макет, нажав кнопку "Отобразить задачу".</p>
<p><img src='img/Screen2.png'></p>

<h2>2. Настройка генерации</h2>

<p>Здесь вы регулируете гиперпараметры генераторов. Каждый генератор обладает своим уникальным набором параметров, необходимых для формирования контента.</p>

<p>Вторым этапом является выбор правильных ограничений для генераторов. Например, для первого генератора, который определяет число n в нашем макете, мы генерируем числа в диапазоне от 15 до 20. Для второго генератора, который устанавливает значения переменной k, мы выбираем значения от 2 до 6.</p>
<p><img src='img/Screen3.png'></p>


<p>По завершении процесса генерации результат сохраняется в специальном массиве данных под соответствующим индексом. Этот индекс находится слева от генератора, и они равны 100 и 101.</p>

<p>Теперь вернемся во вкладку "Основная рабочая область" и отобразим нашу задачу. Вы увидите, что теперь вместо 0 в задаче генерируются числа.</p>
<p><img src='img/Screen4.png'></p>


<h2>3. Настройка решений</h2>

<p>В данной вкладке вы определяете гиперпараметры для конкретных решений, используя индексы генераторов в качестве ключевых параметров.</p>

<p>Третьим этапом будет добавление решения к нашей задаче. Сначала перейдем на вкладку "Основная рабочая область" и нажмем кнопку "+". После этого появится элемент, который, при выборе, позволит нам определить нужное решение из списка доступных. Выбираем решение "Формула размещений" и переходим на вкладку "Настройка решения".</p>
<p><img src='img/Screen5.png'></p>

<p>На этом этапе необходимо вставить правильные индексы в формулу. Используем числа, которые мы сгенерировали. Они находятся в индексах 100 и 101. Результат вычислений поместим в индекс 200 в общий массив данных.</p>
<p><img src='img/Screen6.png'></p>


<h2>4. Настройка константы и ответа</h2>

<p>На данной вкладке вы настраиваете константы, выбираете индекс и определяете тип ответа. Четвертым и последним шагом будет настройка ответа. Во вкладке "Настройка решений" мы успешно решили нашу задачу, и её ответ находится в ячейке с индексом 200. Во вкладке "Настройка констант и ответа" мы просто указываем индекс правильного ответа.</p>
<p><img src='img/Screen7.png'></p>

<p>Теперь переходим во вкладку "Основная рабочая область", выбираем количество задач, которые мы хотим сгенерировать, пусть это будет 5, и нажимаем кнопку "Генерировать". Появляется сообщение об успешной генерации, что означает, что задачи успешно созданы. Далее переходим в папку загрузки и обнаруживаем там файл в формате GIFT с нашими задачами в формированном виде.</p>


<h2>5. Функция замены слов.</h2>

<p>(Доступно только опытным пользователям!)</p>

<p>Вы можете создать макет задачи с изменяемыми словами. Для этого просто замените интересующее вас слово на какой-то класс, например, "фрукт", и заключите его в звездочки, вот так: *фрукт*. Теперь вместо этого слова будут подставляться различные фрукты. Надеемся, что данная справка поможет вам эффективно использовать все возможности программы.</p>

<p>Спасибо за использование нашей программы!</p>


        """
        text_browser.setHtml(help_text)

        # # Загружаем изображения из папки img в рабочей директории
        # img_folder = os.path.join(os.getcwd(), 'img')
        # for filename in os.listdir(img_folder):
        #     if filename.lower().endswith(('.png', '.jpg', '.jpeg', '.gif')):
        #         img_path = os.path.join(img_folder, filename)
        #         img_tag = f"<img src='{img_path}' width='400'>"
        #         text_browser.insertHtml(img_tag)

        # Делаем текстовый виджет только для чтения
        text_browser.setOpenExternalLinks(True)
        text_browser.setOpenLinks(False)
        text_browser.setReadOnly(True)


if __name__ == '__main__':
    from PyQt5.QtWidgets import QApplication

    app = QApplication([])
    help_dialog = HelpDialog()
    help_dialog.exec_()
